generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ChatSession {
  id            String   @id @default(cuid())
  sessionId     String   @unique @map("session_id")
  userIp        String?  @map("user_ip")
  userAgent     String?  @map("user_agent")
  language      String   @default("en")
  status        String   @default("active")
  websiteUserId String?  @map("website_user_id")
  createdAt     DateTime @default(now()) @map("created_at")
  updatedAt     DateTime @updatedAt @map("updated_at")

  messages ChatMessage[]
  feedback FeedbackForm?

  @@map("chat_sessions")
}

model ChatMessage {
  id             String   @id @default(cuid())
  sessionId      String   @map("session_id")
  messageType    String   @map("message_type")
  content        String
  intent         String?
  confidence     Float?
  responseTimeMs Int?     @map("response_time_ms")
  createdAt      DateTime @default(now()) @map("created_at")

  session ChatSession @relation(fields: [sessionId], references: [sessionId], onDelete: Cascade)

  @@map("chat_messages")
}

model KnowledgeBase {
  id         String   @id @default(cuid())
  category   String
  subcategory String?
  question   String
  answer     String
  keywords   Json?
  language   String   @default("en")
  isActive   Boolean  @default(true) @map("is_active")
  createdAt  DateTime @default(now()) @map("created_at")
  updatedAt  DateTime @updatedAt @map("updated_at")

  @@map("knowledge_base")
}

model FlightCache {
  id           String   @id @default(cuid())
  flightNumber String   @unique @map("flight_number")
  flightData   Json     @map("flight_data")
  expiresAt    DateTime @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("flight_cache")
}

model FeedbackForm {
  id        String   @id @default(cuid())
  sessionId String?  @unique @map("session_id")
  name      String?
  email     String?
  phone     String?
  subject   String?
  message   String?
  status    String   @default("pending")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  session ChatSession? @relation(fields: [sessionId], references: [sessionId])

  @@map("feedback_forms")
}

model SupportAgent {
  id               String    @id @default(cuid())
  name             String
  email            String    @unique
  isOnline         Boolean   @default(false) @map("is_online")
  currentSessionId String?   @map("current_session_id")
  lastActivity     DateTime? @map("last_activity")
  createdAt        DateTime  @default(now()) @map("created_at")
  updatedAt        DateTime  @updatedAt @map("updated_at")

  @@map("support_agents")
}

model ScrapingCache {
  id          String   @id @default(cuid())
  sourceUrl   String   @map("source_url")
  contentHash String   @map("content_hash")
  scrapedData Json     @map("scraped_data")
  expiresAt   DateTime @map("expires_at")
  createdAt   DateTime @default(now()) @map("created_at")

  @@map("scraping_cache")
}

model ChatAnalytics {
  id                String   @id @default(cuid())
  date              DateTime @unique
  totalSessions     Int      @default(0) @map("total_sessions")
  totalMessages     Int      @default(0) @map("total_messages")
  avgResponseTimeMs Int?     @map("avg_response_time_ms")
  satisfactionScore Float?   @map("satisfaction_score")
  createdAt         DateTime @default(now()) @map("created_at")

  @@map("chat_analytics")
} 